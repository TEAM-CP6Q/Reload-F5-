plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.f5'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.3")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //mariadb
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    //mySQL
    implementation 'mysql:mysql-connector-java:8.0.33'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'  // API 모듈
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5' // 구현 모듈
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5' // Jackson을 사용한 JSON 처리

    //thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    //Webflux
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    //Jackson
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.1'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.14.1'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.14.1'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
